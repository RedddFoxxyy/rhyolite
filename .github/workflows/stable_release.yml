name: "publish-stable"
on:
  push:
    branches:
      - release
    # paths:
    #   - 'packaging/build.md'

jobs:
  publish-tauri:
    permissions:
      contents: write # Ensure this is present
      issues: write # Optional but recommended
      pull-requests: write # Optional but recommended
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest" # for Arm based macs (M1 and above)
            args: "--target aarch64-apple-darwin"
          - platform: "macos-latest" # for Intel based macs
            args: "--target x86_64-apple-darwin"
          - platform: "ubuntu-22.04"
            args: ""
          - platform: "windows-latest" # Windows x64
            args: "--target x86_64-pc-windows-msvc"
          - platform: "windows-latest" # Windows x86 (32-bit)
            args: "--target i686-pc-windows-msvc"
          - platform: "windows-latest" # Windows ARM64
            args: "--target aarch64-pc-windows-msvc"

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: >
            ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' ||
            matrix.platform == 'windows-latest' && 'x86_64-pc-windows-msvc,i686-pc-windows-msvc,aarch64-pc-windows-msvc' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: install frontend dependencies
        run: npm install

      - name: Extract version from Cargo.toml
        id: get_version
        run: |
          # Define the path to your Cargo.toml file (relative to the repository root)
          cargo_file="src-tauri/cargo.toml"

          # Extract the version from Cargo.toml (assumes a line like: version = "0.1.5")
          version=$(grep -m 1 '^version' "$cargo_file" | sed -E 's/version\s*=\s*"(.*)"/\1/')

          echo "Version found: $version"
          echo "::set-output name=version::$version"

      # Step 1: Generate auto-generated changelog (using a community Action)
      - name: Generate Changelog
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: v${{ steps.get_version.outputs.version }} # Adjust to your version variable or strategy

      # Step 2: Generate "What's Changed" block from commits
      - name: Generate "What's Changed" block
        id: whats_changed
        run: |
          # Get commit messages between the last tag and HEAD
          commits=$(git log $(git describe --tags --abbrev=0)..HEAD --pretty=format:"- %s")
          echo "whats_changed<<EOF" >> $GITHUB_OUTPUT
          echo "$commits" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      # Step 3: Publish the release with combined release body
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v__VERSION__
          releaseName: "Rhyolite(v__VERSION__) ALPHA"
          releaseBody: |
            # Rhyolite app(v__VERSION__) Alpha release.

            ## Caution:
            - This is an alpha release and thus can have some bugs.

            ## What's Changed:
            ${{ steps.whats_changed.outputs.whats_changed }}

            ## Auto-generated Changelog:
            ${{ steps.changelog.outputs.changes }}

          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}
