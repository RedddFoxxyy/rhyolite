name: 'publish'
on:
  push:
    branches:
      - nightly
    # paths:
    #   - 'packaging/build.md'

jobs:
  publish-tauri:
    permissions: 
      contents: write  # Ensure this is present
      issues: write    # Optional but recommended
      pull-requests: write  # Optional but recommended
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'  # for Arm based macs (M1 and above)
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest'  # for Intel based macs
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'  # Windows x64
            args: '--target x86_64-pc-windows-msvc'
          - platform: 'windows-latest'  # Windows x86 (32-bit)
            args: '--target i686-pc-windows-msvc'
          - platform: 'windows-latest'  # Windows ARM64
            args: '--target aarch64-pc-windows-msvc'

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: >
            ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' ||
            matrix.platform == 'windows-latest' && 'x86_64-pc-windows-msvc,i686-pc-windows-msvc,aarch64-pc-windows-msvc' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: install frontend dependencies
        run: npm install

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v__VERSION__
          releaseName: 'Rhyolite(v__VERSION__)'
          releaseBody: 'Draft Release'
          releaseDraft: true
          prerelease: true
          args: ${{ matrix.args }}
